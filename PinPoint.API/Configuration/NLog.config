<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Info" internalLogFile="c:\temp\nlog-PinPoint.log">
  <extensions>
    <add assembly="NLog.Appsettings.Standard" />
  </extensions>
  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs. Data Source=DESKTOP-RGUCUC9; Initial Catalog=PinPoint; User Id=sa; Password=00000;TrustServerCertificate=True
   -->
  <targets>
    <target xsi:type="Database"
            name="dbTarget"
            dbProvider="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient"
         connectionString="${appsettings:name=ConnectionStrings.WebApiDatabase}"
commandType="StoredProcedure"
commandText="[dbo].[SP_Nlog_Insert]">
      <parameter name="@machineName"    layout="${machinename}" />
      <!--Kayıt edilecek log'un pattern'i ile alakalı config-->
      <parameter name="@logged"         layout="${date}" />
      <parameter name="@level"          layout="${level}" />
      <parameter name="@message"        layout="${message}" />
      <parameter name="@logger"         layout="${logger}" />
      <parameter name="@properties"     layout="${all-event-properties:separator=|}" />
      <parameter name="@callsite"       layout="${callsite}" />
      <parameter name="@exception"      layout="${exception:tostring}" />
    </target>

    <!-- File Target for all log messages with basic details -->
    <target xsi:type="File" name="allfile" fileName="${basedir}/logs/PinPoint-Log-${shortdate}.log"
          layout="${longdate}| ${event-properties:item=EventId_Id:whenEmpty=0}| ${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />

    <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <target xsi:type="Console" name="lifetimeConsole" layout="${level:truncate=4:lowercase=true}: ${logger}[0]${newline}      ${message}${exception:format=tostring}" />
  </targets>

  <rules>
    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    -->
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allfile" />
    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole" final="true" />
    <!--Skip non-critical Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <!-- BlackHole 
    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />-->
    <!--Skip non-critical Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />

    <logger name="*" minlevel="Info" writeTo="dbTarget" />
  </rules>
</nlog>